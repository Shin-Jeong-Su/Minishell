--jeshin--
1. readline하고나서 또 말록해서 받아야하는지? test.c 에서도 같이 테스트해봤는데 잘 되는것 같은데?
2. tre->pipe 가 pipe의 개수를 의미하는지? 아니면 그 노드가 pipe임을 알려주는 플래그인지? 후자가 맞는듯.
3. end_flag는 언제 on되는건지?
4. 순회할때 참고할만한 그림.
5. 트리 순회 어케함?
6. tk_idx_set, tk_list, chked는 뭐지?
7. direct는 뭐지?
위에 있는 것들 해결---------

1.pipex에서는 어떻게 했지? 명령어 개수 파악해서 그만큼 자식만들어서 자식에서 파이프 연결해주고 명령실행하고 부모는 밖에서 파이프 모두 닫아주고 어짜피 사용안하니까 자식 기다려주고.끝.
2.그럼 지금은 어디까지 했노? 명령어개수는 모르지만 파이프개수는 알고 그래서 부모에서 파이프 다 만들어주고 리다이렉션, 히어독과 어펜딩도 다 열어주고.
그럼 트리 순회하면서 명령어일때마다 자식만들고 자식은 연결하고 명령실행하고. 근데 연결할 떄 미리 연결해놓아도되나? 그러면 자식에선 그냥 실행만하면되잖아.부모에서 잘 닫고 자식에서도 사용
안하는거 잘 닫아주면 될 것 같은디? 그럼 일단 이렇게하는걸로.
아 고민되네. 트리 순회하면서 포크하고 연결하고 실행할지 아니면 연결하고 나서 다시 순회하면서 포크하고 실행할지. 전자로 ㄲ

tree -> pipe; --> tree -> ctrl_token == PIPE, LEFT, RIGHT, HERE_DOC

